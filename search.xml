<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>outlook邮件获取</title>
      <link href="/2021/08/03/outlook%E9%82%AE%E4%BB%B6%E8%8E%B7%E5%8F%96/"/>
      <url>/2021/08/03/outlook%E9%82%AE%E4%BB%B6%E8%8E%B7%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<p>outlook邮件获取</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> imaplib</span><br><span class="line"><span class="keyword">import</span> email</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess_charset</span>(<span class="params">msg</span>):</span></span><br><span class="line">        charset = msg.get_charset()</span><br><span class="line">        <span class="keyword">if</span> charset <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            content_type = msg.get(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;&#x27;</span>).lower()</span><br><span class="line">            pos = content_type.find(<span class="string">&#x27;charset=&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> pos &gt;= <span class="number">0</span>:</span><br><span class="line">                charset = content_type[pos + <span class="number">8</span>:].strip()</span><br><span class="line">        <span class="keyword">return</span> charset</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseHeader</span>(<span class="params">message</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; 解析邮件首部 &quot;&quot;&quot;</span></span><br><span class="line">    subject = message.get(<span class="string">&#x27;subject&#x27;</span>)  </span><br><span class="line">    h = email.Header.Header(subject)</span><br><span class="line">    dh = email.Header.decode_header(h)</span><br><span class="line">    subject = unicode(dh[<span class="number">0</span>][<span class="number">0</span>], dh[<span class="number">0</span>][<span class="number">1</span>]).encode(<span class="string">&#x27;gb2312&#x27;</span>)</span><br><span class="line">    <span class="comment"># 主题</span></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseBody</span>(<span class="params">message</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; 解析邮件/信体 &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 循环信件中的每一个mime的数据块</span></span><br><span class="line">    <span class="keyword">for</span> msg <span class="keyword">in</span> message.walk():</span><br><span class="line">        content=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        content_type = msg.get_content_type()</span><br><span class="line">        <span class="comment"># print(&#x27;content_type:&#x27;,content_type)</span></span><br><span class="line">        <span class="keyword">if</span> content_type == <span class="string">&#x27;text/plain&#x27;</span>: <span class="comment"># or content_type == &#x27;text/html&#x27;</span></span><br><span class="line">            content = msg.get_payload(decode=<span class="literal">True</span>)</span><br><span class="line">            pat = re.<span class="built_in">compile</span>(<span class="string">&quot;为 &quot;</span>+<span class="string">&#x27;(.*?)&#x27;</span>+<span class="string">&quot;，此&quot;</span>,re.S)</span><br><span class="line">            result = pat.findall(content)</span><br><span class="line">            <span class="built_in">print</span>(result[<span class="number">0</span>])</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getMail</span>(<span class="params">host, username, password, port=<span class="number">993</span></span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        serv = imaplib.IMAP4_SSL(host, port)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        serv = imaplib.IMAP4(host, port)</span><br><span class="line">    serv.login(username, password)</span><br><span class="line">  <span class="comment">#  serv.list()</span></span><br><span class="line">    <span class="comment">#serv.select(&quot;JUNK&quot;)</span></span><br><span class="line">    serv.select()</span><br><span class="line">    <span class="comment"># 搜索邮件内容</span></span><br><span class="line">    typ, data = serv.search(<span class="literal">None</span>, <span class="string">&#x27;ALL&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    pcount = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> data[<span class="number">0</span>].split()[::-<span class="number">1</span>]:</span><br><span class="line">        typ, data = serv.fetch(num, <span class="string">&#x27;(RFC822)&#x27;</span>)</span><br><span class="line">        text = data[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">        message = email.message_from_string(text)   <span class="comment"># 转换为email.message对象</span></span><br><span class="line">        parseHeader(message)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">u&#x27;验证码获取&#x27;</span>)</span><br><span class="line">        parseBody(message)   </span><br><span class="line">        pcount += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> pcount &gt; count:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"> </span><br><span class="line">    serv.close()</span><br><span class="line">    serv.logout()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    upass=raw_input(<span class="string">&quot;user----pass:&quot;</span>).split(<span class="string">&#x27;----&#x27;</span>, <span class="number">1</span> );</span><br><span class="line">    host = <span class="string">&quot;outlook.office365.com&quot;</span></span><br><span class="line">    username = upass[<span class="number">0</span>]</span><br><span class="line">    password = upass[<span class="number">1</span>]</span><br><span class="line">    getMail(host, username, password)</span><br><span class="line">    raw_input(<span class="string">&quot;Enter for quit&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>充值网关</title>
      <link href="/2021/08/02/%E5%85%85%E5%80%BC%E7%BD%91%E5%85%B3/"/>
      <url>/2021/08/02/%E5%85%85%E5%80%BC%E7%BD%91%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h1><p><img data-src="https://qingfeng-10005853.cos.ap-shanghai.myqcloud.com/hexo-client/2021/08/02/8d33a3c3-cbda-4917-8b53-4cab4288640d.png" alt="数据表"></p><span id="more"></span><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dict_factory</span>(<span class="params">cursor, row</span>):</span></span><br><span class="line">    d = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> idx, col <span class="keyword">in</span> <span class="built_in">enumerate</span>(cursor.description):</span><br><span class="line">        d[col[<span class="number">0</span>]] = row[idx]</span><br><span class="line">    <span class="keyword">return</span> d</span><br><span class="line">cx = sqlite3.connect(<span class="string">&quot;db.sqlite3&quot;</span>)</span><br><span class="line">cx.row_factory = dict_factory</span><br><span class="line">cu = cx.cursor()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendgold</span>(<span class="params">gameuser,gold,order_number</span>):</span></span><br><span class="line">    <span class="comment">#发送元宝</span></span><br><span class="line">    cu.execute(<span class="string">&quot;select username from app_usertable where username=&#x27;%s&#x27;&quot;</span>%gameuser)</span><br><span class="line">    sqline=<span class="built_in">int</span>(<span class="built_in">len</span>(cu.fetchall()))</span><br><span class="line">    <span class="keyword">if</span> sqline&gt;<span class="number">0</span>:</span><br><span class="line">        cu.execute(<span class="string">&quot;select gold from app_usertable where username=&#x27;%s&#x27;&quot;</span>%gameuser)</span><br><span class="line">        gold_old=<span class="built_in">int</span>(cu.fetchall()[<span class="number">0</span>][<span class="string">&quot;gold&quot;</span>])</span><br><span class="line">        gold_new=<span class="built_in">int</span>(gold_old)+gold*<span class="number">2000</span></span><br><span class="line">        cu.execute(<span class="string">&quot;update app_usertable set gold = %s where username=&#x27;%s&#x27;&quot;</span>%(gold_new,gameuser))</span><br><span class="line">        cu.execute(<span class="string">&quot;update app_order set send = 1 where order_number=&#x27;%s&#x27;&quot;</span>%(order_number))</span><br><span class="line">        cx.commit()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;【充值处理】订单号:%s   用户名:%s    原始钻石数量:%s 充值后钻石数量:%s&quot;</span>%(order_number,gameuser,gold_old,gold_new))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;【异常处理】用户不存在,关闭订单:%s&quot;</span>%order_number)</span><br><span class="line">        cu.execute(<span class="string">&quot;update app_order set send = 1 where order_number=&#x27;%s&#x27;&quot;</span>%(order_number))</span><br><span class="line">        cx.commit()</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ddstatus</span>():</span></span><br><span class="line">    cu.execute(<span class="string">&quot;select order_number,order_status,gameuser,gold from app_order where send=0 and order_status=1&quot;</span>)</span><br><span class="line">    result = cu.fetchall()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;当前有%s个订单未处理&quot;</span>%(<span class="built_in">len</span>(result)))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">        order_number=i[<span class="string">&quot;order_number&quot;</span>] <span class="comment">#订单号</span></span><br><span class="line">        order_status=i[<span class="string">&quot;order_status&quot;</span>] <span class="comment">#是否已支付</span></span><br><span class="line">        gameuser=i[<span class="string">&quot;gameuser&quot;</span>] <span class="comment">#用户名</span></span><br><span class="line">        gold=i[<span class="string">&quot;gold&quot;</span>] <span class="comment">#充值数量(人民币)</span></span><br><span class="line">        <span class="comment">#print(&quot;【订单处理】订单号:%s    支付状态:%s    用户名:%s    充值数量:%s&quot;%(order_number,order_status,gameuser,gold))</span></span><br><span class="line">        <span class="comment">#开始发送元宝</span></span><br><span class="line">        sendgold(gameuser,gold,order_number)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    </span><br><span class="line">    ddstatus()</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line">        </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
